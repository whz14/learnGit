day1 Feb 22
makdir [flodername]				// 建路径
pwd 							// 当前路径
git init 						// 将当前的路径变成一个仓库
git add [filename] 				// 把文件filename加到仓库
git commit -m "%s"				// 保存更改, %s是一句readme说明
git status 						// 当前状态——有多少添add了但是没commit的
git diff [filename]				// 工作区里filename和之前的区别
git log							// 查看log日志, 各次commit id
git log --pretty=onelin			// 相传可以查看log的简化版?
git reset --hard HEAD^			// '^'有几个，就退回几个之前。没有^就是不动
git reset --hard [commit_id]	// 前进
git reflog						// 查看所有log, i.e.历史log 

day2. Feb 23
add是加到暂存区，commit才加到master(版本库)
git diff HEAD -- [filename]		// filename工作区和版本库的区别
git checkout -- [filename]		// 撤回对filename的修改，到最近一次的commit或add的状态。 --很有意义
git reset HEAD [filename]		// 手贱add了之后，将filename在暂存区的修改撤回(撤回add)
ssh-keygen -t rsa -C "youremail@example.com"	// 第一次的时候需要用这个, id_rsa.pub里的粘贴进github里的sshkeys
git remote add origin github@github.com:whz14/[res_name].git // 本个本地库加成[res_name]
git push -u origin master		// 第一次push
git push origin master			// 之后的push
git clone github@github.com:whz14/[res_name].git 	// 将res_name整体克隆到当前目录下的一个新建的res_name文件夹
git checkout -b [branch_name]	//新开一个分支branch_name. -b指brunch
git checkout [branch_name]		// 转到branch_name上
git merge [branch_name]			// 将branch_name合并到master
git branch -d [branch_name]	// 删除 branch_name